<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.lookst.seller.dao.SellerMapper">

   <!-- 상품 리스트 -->
   <sql id="searchConditionP">
      <choose>
         <when test='option=="C"'>
            AND product_kind LIKE concat('%', #{keyword}, '%')
         </when>
         <when test='option=="M"'>
            AND product_name LIKE concat('%', #{keyword}, '%')
         </when>
         <when test='option=="P"'>
            AND product_no LIKE concat('%', #{keyword}, '%')
         </when>
         <otherwise>
            AND product_kind LIKE concat('%', #{keyword}, '%')
         </otherwise>
      </choose>
   </sql>


   <select id="searchResultCntP" parameterType="SearchItem"
      resultType="int">
      select count(*)
      from SellerPrdtList
      where true
      <include refid="searchConditionP" />
   </select>

   <select id="searchSelectPageP" parameterType="SearchItem"
      resultType="PrdtListDto">
      select product_no, prdt_img_name, product_kind, product_name,
      prdt_option_size, prdt_option_color,
      product_price, prdt_option_stock
      from SellerPrdtList
      where true
      <include refid="searchConditionP" />
      order by product_no desc
      limit #{pageSize} offset #{offset}
   </select>

   <!-- 상품 삭제 -->
   <delete id="productDelete" parameterType="int">
      delete from product
      where product_no = #{product_no}
   </delete>

   <!-- 상품 재고 변경 -->
   <update id="productStock" parameterType="map">
      update prdt_option
      set
      prdt_option_stock = #{stock}
      where product_no = #{product_no}
   </update>

   <!-- 주문리스트 -->
   <sql id="searchCondition">
      <choose>
         <when test='option=="C"'>
            AND member_name LIKE concat('%', #{keyword}, '%')
         </when>
         <when test='option=="N"'>
            AND prdt_order_no LIKE concat('%', #{keyword}, '%')
         </when>
         <when test='option=="P"'>
            AND product_name LIKE concat('%', #{keyword}, '%')
         </when>
         <otherwise>
            AND member_name LIKE concat('%', #{keyword}, '%')
         </otherwise>
      </choose>
   </sql>

   <select id="searchResultCnt" parameterType="SearchItem"
      resultType="int">
      select count(*)
      from SellerOrderList
      where true
      <include refid="searchCondition" />
   </select>

   <select id="searchSelectPage" parameterType="SearchItem"
      resultType="OrderListDto">
      select *
      from SellerOrderList
      where true
      <include refid="searchCondition" />
      order by prdt_order_date desc
      limit #{pageSize} offset #{offset}
   </select>

   <!-- 주문 상태 변경 -->
   <update id="OrderStatusMod" parameterType="map">
      update prdt_order
      set
      prdt_order_type = #{orderStatus}
      where prdt_order_no = #{prdt_order_no}
   </update>


   <!-- 취소, 환불, 반품 리스트 -->
   <select id="searchResultCntR" parameterType="SearchItem"
      resultType="int">
      select count(*)
      from SellerOrderList
      where true
      <include refid="searchCondition" />
      and prdt_order_cancel is not null
   </select>


   <select id="searchSelectPageR" parameterType="SearchItem"
      resultType="OrderListDto">
      select *
      from
      SellerOrderList
      where true
      <include refid="searchCondition" />
      and prdt_order_cancel is not null
      order by prdt_order_date desc
      limit
      #{pageSize} offset #{offset}
   </select>


   <!-- 취소, 환불, 반품 상태 변경 -->
   <update id="ReqOrderStatusMod" parameterType="map">
      update prdt_order
      set
      prdt_order_cancel = #{ReqOrderStatus}
      where prdt_order_no =
      #{prdt_order_no}
   </update>

   <!-- 나의 매출 - 신규주문(결제완료) -->
   <select id="NewSale" resultType="MySalesDto">
      select *
      from prdt_order
      where
      prdt_order_type = 'C'
   </select>

   <!-- 나의 매출 - 취소접수 -->
   <select id="NewCancel" resultType="MySalesDto">
      select *
      from prdt_order
      where
      prdt_order_cancel = 'D'
   </select>

   <!-- 나의 매출 => 오늘 매출 -->
   <select id="TodayAmt" resultType="int">
      <![CDATA[select sum(payment) from SellerOrderList
       where prdt_order_type = 'C'
       and prdt_order_cancel is null
       and prdt_order_date >= current_date 
       and prdt_order_date < current_date  + 1]]>
   </select>
   
   <!-- 나의 매출 => 이번 달 총 매출  -->
   <select id="MonthAmt" resultType="int">
      <![CDATA[select sum(payment) from SellerOrderList
       where prdt_order_type = 'C'
       and prdt_order_cancel is null
       and prdt_order_date >= date_trunc('month', current_date)::date
      and prdt_order_date < date_trunc('month', current_date + interval '1 months')::date  - 1]]>
   </select>

   <!-- 상품 등록 - 수정중 -->
   <!-- <insert id="PrdtInsert" parameterType="SellerDto" -->
   <!-- useGeneratedKeys="true" keyProperty="product_no"> -->
   <!-- <selectKey keyProperty="product_no" resultType="int" order="BEFORE"> -->
   <!-- SELECT -->
   <!-- ITEM_SEQ.NEXTVAL FROM DUAL -->
   <!-- </selectKey> -->

   <!-- INSERT INTO product (seller_no, product_kind, product_price, -->
   <!-- product_date, product_name, product_info) VALUES ( -->
   <!-- #{seller_no} , -->
   <!-- #{product_kind}, -->
   <!-- #{product_price}, -->
   <!-- #{product_date}, -->
   <!-- #{product_name}, -->
   <!-- #{product_info}, -->
   <!-- ) -->
   <!-- </insert> -->
   <!-- <insert id="ProductRegister"> -->
   <!-- INSERT INTO product -->
   <!-- (seller_no, product_kind, product_price, product_date, product_name, 
      product_type, product_info) -->
   <!-- VALUES( -->
   <!-- #{seller_no}, -->
   <!-- #{product_kind}, -->
   <!-- #{product_price}, -->
   <!-- #{product_date}, -->
   <!-- #{product_name}, -->
   <!-- #{product_type}, -->
   <!-- #{product_info}, -->
   <!-- ) -->
   <!-- </insert> -->

</mapper>